module "wrapper" {
  source = "../"

  for_each = var.items

  create_bucket                         = try(each.value.create_bucket, true)
  attach_elb_log_delivery_policy        = try(each.value.attach_elb_log_delivery_policy, false)
  attach_lb_log_delivery_policy         = try(each.value.attach_lb_log_delivery_policy, false)
  attach_deny_insecure_transport_policy = try(each.value.attach_deny_insecure_transport_policy, false)
  attach_require_latest_tls_policy      = try(each.value.attach_require_latest_tls_policy, false)
  attach_policy                         = try(each.value.attach_policy, false)
  attach_public_policy                  = try(each.value.attach_public_policy, true)
  bucket                                = try(each.value.bucket, null)
  bucket_prefix                         = try(each.value.bucket_prefix, null)
  acl                                   = try(each.value.acl, null)
  policy                                = try(each.value.policy, null)
  tags                                  = try(each.value.tags, {})
  force_destroy                         = try(each.value.force_destroy, false)
  acceleration_status                   = try(each.value.acceleration_status, null)
  request_payer                         = try(each.value.request_payer, null)
  website                               = try(each.value.website, {})
  cors_rule                             = try(each.value.cors_rule, [])
  versioning                            = try(each.value.versioning, {})
  logging                               = try(each.value.logging, {})
  grant                                 = try(each.value.grant, [])
  owner                                 = try(each.value.owner, {})
  expected_bucket_owner                 = try(each.value.expected_bucket_owner, null)
  lifecycle_rule                        = try(each.value.lifecycle_rule, [])
  replication_configuration             = try(each.value.replication_configuration, {})
  server_side_encryption_configuration  = try(each.value.server_side_encryption_configuration, {})
  object_lock_configuration             = try(each.value.object_lock_configuration, {})
  block_public_acls                     = try(each.value.block_public_acls, false)
  block_public_policy                   = try(each.value.block_public_policy, false)
  ignore_public_acls                    = try(each.value.ignore_public_acls, false)
  restrict_public_buckets               = try(each.value.restrict_public_buckets, false)
  control_object_ownership              = try(each.value.control_object_ownership, false)
  object_ownership                      = try(each.value.object_ownership, "ObjectWriter")
  putin_khuylo                          = try(each.value.putin_khuylo, true)
}
